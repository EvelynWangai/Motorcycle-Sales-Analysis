# Importing packages
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Reading the data
df = pd.read_csv('data/sales_data.csv', parse_dates=['date'])

# Take a look at the first datapoints
df.head()

# QUESTION 1: WHAT ARE THE TOTAL SALES FOR EACH PAYMENT METHOD
df.groupby('payment')[['total']].sum()

# QUESTION 2: WHAT IS THE AVERAGE UNIT PRICE FOR EACH PRODUCT LINE
df.groupby('product_line')[['unit_price']].mean()

# QUESTION 3: CREATE PLOTS TO VISUALIZE FINDINGS FOR QUESTION 1
total_sales = df.groupby('payment')[['total']].sum()
total_sales.plot(kind = 'bar')
plt.title("Transfer Method of Payment has the highest Total Sales")
plt.show()

## QUESTION 3.1: CREATE PLOTS TO VISUALIZE FINDINGS FOR QUESTION 2
avg_unitPrice = df.groupby('product_line')[['unit_price']].mean()
avg_unitPrice.plot(kind = 'bar')
plt.title("Engine is the most expensive part with a Unit Price Average of 60.09")
plt.show()

#QUESTION 4:Investigate further

#4.1 total purchase value by product line
df.groupby('product_line')[['total']].sum()

# product line sales
productline_sales = df.groupby('product_line')[['total']].sum()
productline_sales.plot(kind = 'bar')
plt.title("Suspension & Traction parts has the highest number of Sales")
plt.show()

#4.2 Warehouse sales grouped by the months - Which warehouse had the highest sales
# Get the month from the date column
df['month'] = df['date'].dt.month

## What month had the highest sales
df.groupby(['month'])[['total']].sum()

# distribution of sales across the warehouses
df.groupby(['warehouse'])[['total']].sum()

##Breakdown of each product line sales in each warehouse
sales_table = pd.pivot_table(df, values = 'total', index = ['warehouse'], columns = ['product_line'], aggfunc = np.sum)
sales_table

## Product line breakdown by sales and quantity
df.groupby('product_line')[['total', 'quantity']].sum()

## Breakdown of each product line quantity sales in each warehouse
quantitySales_table = pd.pivot_table(df, values = 'quantity', index = ['warehouse'], columns = ['product_line'], aggfunc = np.sum)
quantitySales_table

